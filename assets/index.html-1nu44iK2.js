import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,b as e}from"./app-HJOKgcK2.js";const p={},t=e(`<h2 id="definamos-la-tienda" tabindex="-1"><a class="header-anchor" href="#definamos-la-tienda"><span>Definamos la tienda</span></a></h2><p>En este tutorial, aprenderemos a definir la tienda de nuestra aplicación. La tienda es el lugar donde el jugador podrá comprar objetos y mejoras para su personaje. En este caso, definiremos la tienda con un conjunto de objetos que el jugador podrá comprar.</p><p>Para definir la tienda, necesitamos crear una clase que represente a la tienda. En esta clase, definiremos los objetos que el jugador podrá comprar. Cada objeto tendrá un precio y una descripción. Además, necesitaremos una clase que represente al jugador y que mantenga un registro de los objetos que ha comprado.</p><p>Para empezar crearemos un panel que represente la tienda. Este panel contendrá una lista de objetos que el jugador podrá comprar. Cada objeto tendrá un botón que permitirá al jugador comprarlo. Cuando el jugador compre un objeto, este se agregará a la lista de objetos que ha comprado.</p><p>Para crear la tienda, necesitaremos las siguientes clases:</p><ul><li><code>ShopItemDetail</code>: Clase que representa un objeto que el jugador podrá comprar. Esta clase contendrá un precio y una descripción del objeto.</li><li><code>ShopPanel</code>: Clase que representa la tienda. Esta clase contendrá una lista de objetos que el jugador podrá comprar. Cada objeto tendrá un botón que permitirá al jugador comprarlo.</li><li><code>Player</code>: Clase que representa al jugador. Esta clase mantendrá un registro de los objetos que ha comprado.</li></ul><h2 id="shopitemdetail" tabindex="-1"><a class="header-anchor" href="#shopitemdetail"><span>ShopItemDetail</span></a></h2><p>La clase <code>ShopItemDetail</code> representa un objeto que el jugador podrá comprar. Esta clase contendrá un precio y una descripción del objeto.</p><p>Lo primero que haremos es crear un GUI Form para la clase <code>ShopItemDetail</code>. Para ello, haremos clic derecho sobre el paquete panels y seleccionaremos la opción New -&gt; GUI Form. En el cuadro de diálogo que aparece, escribiremos el nombre de la clase <code>ShopItemDetail</code> y haremos clic en el botón Finish.</p><p>A continuación, abriremos el archivo <code>ShopItemDetail.form</code> y agregaremos los siguientes componentes:</p><ul><li>Un <code>JTextPane</code> para mostrar la descripción del objeto.</li><li>Un <code>JButton</code> para permitir al jugador comprar el objeto.</li></ul><p>El código de la clase <code>ShopItemDetail</code> será el siguiente:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token keyword">package</span> <span class="token namespace">gui<span class="token punctuation">.</span>panels</span><span class="token punctuation">;</span>
    
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">gui<span class="token punctuation">.</span>buttons<span class="token punctuation">.</span></span><span class="token class-name">BuyButton</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">items<span class="token punctuation">.</span></span><span class="token class-name">Item</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">util<span class="token punctuation">.</span>managers<span class="token punctuation">.</span></span><span class="token class-name">FontManager</span></span><span class="token punctuation">;</span>
    
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span>border<span class="token punctuation">.</span></span><span class="token class-name">EmptyBorder</span></span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ShopItemDetail</span> <span class="token keyword">extends</span> <span class="token class-name">BackGroundPanel</span> <span class="token punctuation">{</span>
    
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Item</span> item<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">JTextPane</span> itemDescription<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">JButton</span> buyButton<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">JPanel</span> mainPanel<span class="token punctuation">;</span>
    
        <span class="token keyword">public</span> <span class="token class-name">ShopItemDetail</span><span class="token punctuation">(</span><span class="token class-name">Item</span> item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>item <span class="token operator">=</span> item<span class="token punctuation">;</span>
            <span class="token function">add</span><span class="token punctuation">(</span>mainPanel<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mainPanel<span class="token punctuation">.</span><span class="token function">setPreferredSize</span><span class="token punctuation">(</span><span class="token function">getPreferredSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mainPanel<span class="token punctuation">.</span><span class="token function">setMaximumSize</span><span class="token punctuation">(</span><span class="token function">getPreferredSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mainPanel<span class="token punctuation">.</span><span class="token function">setMinimumSize</span><span class="token punctuation">(</span><span class="token function">getPreferredSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mainPanel<span class="token punctuation">.</span><span class="token function">setBorder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EmptyBorder</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//mainPanel.setBorder(new LineBorder(Color.BLACK, 5));</span>
            itemDescription<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span><span class="token class-name">FontManager</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFont</span><span class="token punctuation">(</span><span class="token string">&quot;Player&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> description<span class="token punctuation">;</span>
            description <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%s (%s - $%d)&quot;</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span><span class="token function">getRarity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">CenteredTextPane</span><span class="token punctuation">)</span> itemDescription<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendText</span><span class="token punctuation">(</span>description<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">CenteredTextPane</span><span class="token punctuation">)</span> itemDescription<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendText</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">createUIComponents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            buyButton <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BuyButton</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
            itemDescription <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CenteredTextPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>En este código, la clase <code>ShopItemDetail</code> extiende de <code>BackGroundPanel</code>, que es una clase que representa un panel con una imagen de fondo. La clase <code>ShopItemDetail</code> tiene un constructor que recibe un objeto de tipo <code>Item</code> y crea un panel con la descripción del objeto y un botón para comprarlo.</p><p>El método <code>createUIComponents</code> crea los componentes del panel. En este caso, creamos un botón de tipo <code>BuyButton</code> y un <code>JTextPane</code> de tipo <code>CenteredTextPane</code> para mostrar la descripción del objeto.</p><h2 id="shoppanel" tabindex="-1"><a class="header-anchor" href="#shoppanel"><span>ShopPanel</span></a></h2><p>La clase <code>ShopPanel</code> representa la tienda. Esta clase contendrá una lista de objetos que el jugador podrá comprar. Cada objeto tendrá un botón que permitirá al jugador comprarlo.</p><p>Lo primero que haremos es crear un GUI Form para la clase <code>ShopPanel</code>. Para ello, haremos clic derecho sobre el paquete panels y seleccionaremos la opción New -&gt; GUI Form. En el cuadro de diálogo que aparece, escribiremos el nombre de la clase <code>ShopPanel</code> y haremos clic en el botón Finish.</p><p>A continuación, abriremos el archivo <code>ShopPanel.form</code> y agregaremos los siguientes componentes:</p><ul><li>Un <code>JTabbedPane</code> para mostrar la lista de objetos que el jugador podrá comprar.</li><li>Un <code>JPanel</code> para cada categoría de objetos.</li></ul><p>El código de la clase <code>ShopPanel</code> será el siguiente:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token keyword">package</span> <span class="token namespace">gui<span class="token punctuation">.</span>panels</span><span class="token punctuation">;</span>
    
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">gui<span class="token punctuation">.</span>events<span class="token punctuation">.</span></span><span class="token class-name">HandCursorListener</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">gui<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span><span class="token class-name">InventoryTabUI</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">items<span class="token punctuation">.</span></span><span class="token class-name">Item</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">items<span class="token punctuation">.</span></span><span class="token class-name">ItemType</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">items<span class="token punctuation">.</span>armors<span class="token punctuation">.</span>head<span class="token punctuation">.</span></span><span class="token class-name">IronHelmet</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">items<span class="token punctuation">.</span>armors<span class="token punctuation">.</span>head<span class="token punctuation">.</span></span><span class="token class-name">WoodHelmet</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">items<span class="token punctuation">.</span>weapons<span class="token punctuation">.</span>blades<span class="token punctuation">.</span></span><span class="token class-name">WoodBlade</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">player<span class="token punctuation">.</span></span><span class="token class-name">Player</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">util<span class="token punctuation">.</span>interfaces<span class="token punctuation">.</span></span><span class="token class-name">Dimensions</span></span><span class="token punctuation">;</span>
    
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ShopPanel</span> <span class="token keyword">extends</span> <span class="token class-name">BackGroundPanel</span> <span class="token punctuation">{</span>
    
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ShopPanel</span> instance<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Player</span> player<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ActionsPanel</span> actionsPanel<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> tabIndex<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Item</span><span class="token punctuation">&gt;</span></span> weapons<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Item</span><span class="token punctuation">&gt;</span></span> armors<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">JTabbedPane</span> itemDisplayPanel<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">JPanel</span> weaponsPanel<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">JPanel</span> armorsPanel<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">JPanel</span> backgroundPanel<span class="token punctuation">;</span>
    
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ShopPanel</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token keyword">int</span> tabIndex<span class="token punctuation">,</span> <span class="token class-name">Player</span> player<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">if</span> <span class="token punctuation">(</span>instance <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
                weapons <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                weapons<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WoodBlade</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                weapons<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WoodBlade</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                armors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                armors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">IronHelmet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                armors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WoodHelmet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ShopPanel</span><span class="token punctuation">(</span>tabIndex<span class="token punctuation">,</span> player<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> instance<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">private</span> <span class="token class-name">ShopPanel</span><span class="token punctuation">(</span><span class="token keyword">int</span> tabIndex<span class="token punctuation">,</span> <span class="token class-name">Player</span> player<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>player <span class="token operator">=</span> player<span class="token punctuation">;</span>
            itemDisplayPanel<span class="token punctuation">.</span><span class="token function">setUI</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InventoryTabUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>tabIndex <span class="token operator">=</span> tabIndex<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>actionsPanel <span class="token operator">=</span> <span class="token class-name">ActionsPanel</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Dimension</span> size <span class="token operator">=</span> <span class="token class-name">Dimensions</span><span class="token punctuation">.</span><span class="token constant">TAB_SIZE</span><span class="token punctuation">;</span>
            <span class="token function">setPreferredSize</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setMinimumSize</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setMaximumSize</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setSize</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">add</span><span class="token punctuation">(</span>backgroundPanel<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setOpaque</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setBackground</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setMixingCutoutShape</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;Tienda&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            itemDisplayPanel<span class="token punctuation">.</span><span class="token function">addMouseMotionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HandCursorListener</span><span class="token punctuation">(</span>itemDisplayPanel<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">createUIComponents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token comment">//Iniciamos los paneles con las listas de objetos</span>
            weaponsPanel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ItemPanel</span><span class="token punctuation">(</span><span class="token class-name">ItemType</span><span class="token punctuation">.</span><span class="token constant">WEAPON</span><span class="token punctuation">,</span> player<span class="token punctuation">,</span> weapons<span class="token punctuation">)</span><span class="token punctuation">;</span>
            armorsPanel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ItemPanel</span><span class="token punctuation">(</span><span class="token class-name">ItemType</span><span class="token punctuation">.</span><span class="token constant">ARMOR</span><span class="token punctuation">,</span> player<span class="token punctuation">,</span> armors<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ItemPanel</span><span class="token punctuation">)</span> weaponsPanel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">initComponents</span><span class="token punctuation">(</span>weapons<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ItemPanel</span><span class="token punctuation">)</span> armorsPanel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">initComponents</span><span class="token punctuation">(</span>armors<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>En este código, la clase <code>ShopPanel</code> extiende de <code>BackGroundPanel</code>, que es una clase que representa un panel con una imagen de fondo. La clase <code>ShopPanel</code> tiene un constructor que recibe un índice de pestaña y un objeto de tipo <code>Player</code>.</p><p>El método <code>createUIComponents</code> crea los componentes del panel. En este caso, creamos dos paneles de tipo <code>ItemPanel</code> para mostrar la lista de armas y armaduras que el jugador podrá comprar.</p><h2 id="actualizar-itempanel" tabindex="-1"><a class="header-anchor" href="#actualizar-itempanel"><span>Actualizar <code>ItemPanel</code></span></a></h2><p>La clase <code>ItemPanel</code> es una clase que representa un panel con una lista de objetos que el jugador podrá comprar. Esta clase tiene un constructor que recibe un tipo de objeto, un objeto de tipo <code>Player</code> y una lista de objetos que el jugador podrá comprar.</p><p>Para actualizar la clase <code>ItemPanel</code>, necesitamos agregar un método <code>initComponents</code> que reciba una lista de objetos y actualice la lista de objetos que el jugador podrá comprar.</p><p>El código de la clase <code>ItemPanel</code> será el siguiente:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token keyword">package</span> <span class="token namespace">gui<span class="token punctuation">.</span>panels</span><span class="token punctuation">;</span>
    
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">items<span class="token punctuation">.</span></span><span class="token class-name">Item</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">items<span class="token punctuation">.</span></span><span class="token class-name">ItemType</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">player<span class="token punctuation">.</span></span><span class="token class-name">Inventory</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">player<span class="token punctuation">.</span></span><span class="token class-name">Player</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">util<span class="token punctuation">.</span>interfaces<span class="token punctuation">.</span></span><span class="token class-name">Dimensions</span></span><span class="token punctuation">;</span>
    
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ItemPanel</span> <span class="token keyword">extends</span> <span class="token class-name">BackGroundPanel</span> <span class="token punctuation">{</span>
    
        <span class="token keyword">protected</span> <span class="token class-name">JPanel</span> mainPanel<span class="token punctuation">;</span>
        <span class="token keyword">protected</span> <span class="token class-name">JScrollPane</span> scrollPanel<span class="token punctuation">;</span>
        <span class="token keyword">protected</span> <span class="token class-name">JPanel</span> displayPanel<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ItemType</span> type<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Player</span> player<span class="token punctuation">;</span>
    
        <span class="token keyword">public</span> <span class="token class-name">ItemPanel</span><span class="token punctuation">(</span><span class="token class-name">ItemType</span> type<span class="token punctuation">,</span> <span class="token class-name">Player</span> player<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mainPanel<span class="token punctuation">.</span><span class="token function">setPreferredSize</span><span class="token punctuation">(</span><span class="token function">getPreferredSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>player <span class="token operator">=</span> player<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> type<span class="token punctuation">;</span>
            <span class="token function">add</span><span class="token punctuation">(</span>mainPanel<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">initComponents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token class-name">ItemPanel</span><span class="token punctuation">(</span><span class="token class-name">ItemType</span> type<span class="token punctuation">,</span> <span class="token class-name">Player</span> player<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Item</span><span class="token punctuation">&gt;</span></span> items<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mainPanel<span class="token punctuation">.</span><span class="token function">setPreferredSize</span><span class="token punctuation">(</span><span class="token function">getPreferredSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>player <span class="token operator">=</span> player<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> type<span class="token punctuation">;</span>
            <span class="token function">add</span><span class="token punctuation">(</span>mainPanel<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">initComponents</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token doc-comment comment">/**
         * La función initComponents se encarga de inicializar los componentes de la tienda con
         * una lista de items.
         *
         * <span class="token keyword">@param</span> <span class="token parameter">items</span> La lista de items que se mostrarán en la tienda.
         */</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initComponents</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Item</span><span class="token punctuation">&gt;</span></span> items<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token function">setLayouts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            items<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">::</span><span class="token function">addShopItem</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// Colocamos el scroll en la parte superior</span>
            scrollPanel<span class="token punctuation">.</span><span class="token function">getViewport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setViewPosition</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initComponents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token function">setLayouts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Inventory</span> inventory <span class="token operator">=</span> player<span class="token punctuation">.</span><span class="token function">getInventory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">case</span> <span class="token constant">WEAPON</span><span class="token operator">:</span>
                    inventory<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filterWeapons</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">::</span><span class="token function">addItem</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token constant">ARMOR</span><span class="token operator">:</span>
                    inventory<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filterArmors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">::</span><span class="token function">addItem</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token constant">MISC</span><span class="token operator">:</span>
                    inventory<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filterMiscItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">::</span><span class="token function">addItem</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// Colocamos el scroll en la parte superior</span>
            scrollPanel<span class="token punctuation">.</span><span class="token function">getViewport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setViewPosition</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">setLayouts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token class-name">GridBagLayout</span> layout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GridBagLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setBorder</span><span class="token punctuation">(</span><span class="token class-name">BorderFactory</span><span class="token punctuation">.</span><span class="token function">createEmptyBorder</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            layout<span class="token punctuation">.</span>columnWidths <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token class-name">Dimensions</span><span class="token punctuation">.</span><span class="token constant">ITEM_DETAIL_SIZE</span><span class="token punctuation">.</span>width<span class="token punctuation">}</span><span class="token punctuation">;</span>
            layout<span class="token punctuation">.</span>rowHeights <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token class-name">Dimensions</span><span class="token punctuation">.</span><span class="token constant">ITEM_DETAIL_SIZE</span><span class="token punctuation">.</span>height<span class="token punctuation">}</span><span class="token punctuation">;</span>
            displayPanel<span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            displayPanel<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span>layout<span class="token punctuation">)</span><span class="token punctuation">;</span>
            displayPanel<span class="token punctuation">.</span><span class="token function">setOpaque</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            scrollPanel<span class="token punctuation">.</span><span class="token function">setOpaque</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            scrollPanel<span class="token punctuation">.</span><span class="token function">setBorder</span><span class="token punctuation">(</span><span class="token class-name">BorderFactory</span><span class="token punctuation">.</span><span class="token function">createEmptyBorder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            scrollPanel<span class="token punctuation">.</span><span class="token function">getViewport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setOpaque</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            scrollPanel<span class="token punctuation">.</span><span class="token function">getVerticalScrollBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setOpaque</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            scrollPanel<span class="token punctuation">.</span><span class="token function">setVerticalScrollBarPolicy</span><span class="token punctuation">(</span><span class="token class-name">JScrollPane</span><span class="token punctuation">.</span><span class="token constant">VERTICAL_SCROLLBAR_ALWAYS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            scrollPanel<span class="token punctuation">.</span><span class="token function">setHorizontalScrollBarPolicy</span><span class="token punctuation">(</span><span class="token class-name">JScrollPane</span><span class="token punctuation">.</span><span class="token constant">HORIZONTAL_SCROLLBAR_NEVER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">addShopItem</span><span class="token punctuation">(</span><span class="token class-name">Item</span> item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token function">addItemComponent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ShopItemDetail</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">addItem</span><span class="token punctuation">(</span><span class="token class-name">Item</span> item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token function">addItemComponent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ItemDetail</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">addItemComponent</span><span class="token punctuation">(</span><span class="token class-name">BackGroundPanel</span> detail<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token class-name">GridBagConstraints</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GridBagConstraints</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            c<span class="token punctuation">.</span>gridx <span class="token operator">=</span> displayPanel<span class="token punctuation">.</span><span class="token function">getComponentCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">;</span>
            c<span class="token punctuation">.</span>gridy <span class="token operator">=</span> displayPanel<span class="token punctuation">.</span><span class="token function">getComponentCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">;</span>
            c<span class="token punctuation">.</span>fill <span class="token operator">=</span> <span class="token class-name">GridBagConstraints</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">;</span>
            c<span class="token punctuation">.</span>anchor <span class="token operator">=</span> <span class="token class-name">GridBagConstraints</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">;</span>
            c<span class="token punctuation">.</span>weightx <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            c<span class="token punctuation">.</span>weighty <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            displayPanel<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>detail<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            displayPanel<span class="token punctuation">.</span><span class="token function">revalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            displayPanel<span class="token punctuation">.</span><span class="token function">repaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>En este código, la clase <code>ItemPanel</code> extiende de <code>BackGroundPanel</code>, que es una clase que representa un panel con una imagen de fondo. La clase <code>ItemPanel</code> tiene un constructor que recibe un tipo de objeto y un objeto de tipo <code>Player</code>.</p><p>El método <code>initComponents</code> inicializa los componentes del panel con una lista de objetos que el jugador podrá comprar. El método <code>initComponents</code> recibe una lista de objetos y los muestra en el panel.</p><p>El método <code>initComponents</code> sin argumentos inicializa los componentes del panel con los objetos que el jugador tiene en su inventario.</p><h2 id="actualizando-la-clase-gamewindow" tabindex="-1"><a class="header-anchor" href="#actualizando-la-clase-gamewindow"><span>Actualizando la clase <code>GameWindow</code></span></a></h2><p>Para mostrar la tienda en la ventana del juego, necesitamos actualizar la clase <code>GameWindow</code> para agregar un panel de tipo <code>ShopPanel</code> al TabbedPane.</p><p>Una vez agregado el panel al TabbedPane, necesitamos actualizar el método <code>createUIComponents</code> de la clase <code>GameWindow</code> para inicializar el panel de la tienda.</p><p>El código de la clase <code>GameWindow</code> será el siguiente:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token keyword">package</span> <span class="token namespace">gui<span class="token punctuation">.</span>windows</span><span class="token punctuation">;</span>
    
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">enemies<span class="token punctuation">.</span></span><span class="token class-name">Enemy</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">gui<span class="token punctuation">.</span>panels<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">player<span class="token punctuation">.</span></span><span class="token class-name">Player</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">util<span class="token punctuation">.</span>enemies<span class="token punctuation">.</span></span><span class="token class-name">EnemyFactory</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">util<span class="token punctuation">.</span>interfaces<span class="token punctuation">.</span></span><span class="token class-name">Dimensions</span></span><span class="token punctuation">;</span>
    
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
    
    <span class="token doc-comment comment">/**
     * Clase que representa la ventana principal del juego
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GameWindow</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token punctuation">{</span>
    
        <span class="token doc-comment comment">/**
         * Instancia de la ventana principal
         */</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">GameWindow</span> instance<span class="token punctuation">;</span>
        <span class="token doc-comment comment">/**
         * Panel principal de la ventana
         */</span>
        <span class="token keyword">private</span> <span class="token class-name">JPanel</span> backgroundPanel<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Player</span> player<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Enemy</span> enemy<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> slot<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">JTabbedPane</span> actionTabs<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">JPanel</span> statusPanel<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">JPanel</span> battlePanel<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">JPanel</span> inventoryPanel<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">JPanel</span> playerPanel<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">JPanel</span> mainPanel<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">JPanel</span> enemyPanel<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">JPanel</span> shopPanel<span class="token punctuation">;</span>
    
        <span class="token doc-comment comment">/**
         * Método que devuelve la instancia de la ventana principal
         *
         * <span class="token keyword">@param</span> <span class="token parameter">player</span> El jugador
         * <span class="token keyword">@param</span> <span class="token parameter">slot</span>   El slot de guardado
         *
         * <span class="token keyword">@return</span> La instancia de la ventana principal
         */</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">synchronized</span> <span class="token class-name">GameWindow</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token class-name">Player</span> player<span class="token punctuation">,</span> <span class="token keyword">int</span> slot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token comment">//Si la instancia es nula, la creamos</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>instance <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
                instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GameWindow</span><span class="token punctuation">(</span>player<span class="token punctuation">,</span> slot<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//Devolvemos la instancia</span>
            <span class="token keyword">return</span> instance<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token doc-comment comment">/**
         * Método que devuelve la instancia de la ventana principal
         *
         * <span class="token keyword">@return</span> La instancia de la ventana principal
         */</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">synchronized</span> <span class="token class-name">GameWindow</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> instance<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token doc-comment comment">/**
         * Constructor de la clase
         *
         * <span class="token keyword">@param</span> <span class="token parameter">player</span> El jugador
         * <span class="token keyword">@param</span> <span class="token parameter">slot</span>   El slot de guardado
         */</span>
        <span class="token keyword">private</span> <span class="token class-name">GameWindow</span><span class="token punctuation">(</span><span class="token class-name">Player</span> player<span class="token punctuation">,</span> <span class="token keyword">int</span> slot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">this</span><span class="token punctuation">.</span>player <span class="token operator">=</span> player<span class="token punctuation">;</span>
            <span class="token comment">//player.getSkillMap().put(Slash.NAME, Slash.getInstance(player));</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>slot <span class="token operator">=</span> slot<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token doc-comment comment">/**
         * Método que inicializa la ventana
         */</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token comment">///setPanelsSize();</span>
            <span class="token comment">//Título de la Ventana</span>
            <span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&quot;Game Window&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//Operación por defecto de cierre</span>
            <span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span><span class="token class-name">JFrame</span><span class="token punctuation">.</span><span class="token constant">DO_NOTHING_ON_CLOSE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//No la hacemos escalable</span>
            <span class="token function">setResizable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//Agregamos el panel principal</span>
            <span class="token function">add</span><span class="token punctuation">(</span>backgroundPanel<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//Tamaño de la ventana</span>
            <span class="token function">pack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//Centramos la ventana</span>
            <span class="token function">setLocationRelativeTo</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//Hacemos visible la ventana</span>
            <span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setPreferredSize</span><span class="token punctuation">(</span><span class="token class-name">Dimensions</span><span class="token punctuation">.</span><span class="token constant">SCREEN_SIZE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">createUIComponents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token class-name">DialogPanel</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addText</span><span class="token punctuation">(</span><span class="token string">&quot;¡Bienvenido a la aventura!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            playerPanel <span class="token operator">=</span> <span class="token class-name">PlayerPanel</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>player<span class="token punctuation">)</span><span class="token punctuation">;</span>
            player<span class="token punctuation">.</span><span class="token function">setEnemy</span><span class="token punctuation">(</span><span class="token class-name">EnemyFactory</span><span class="token punctuation">.</span><span class="token function">generateRegularEnemy</span><span class="token punctuation">(</span>player<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            enemy <span class="token operator">=</span> player<span class="token punctuation">.</span><span class="token function">getEnemy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mainPanel <span class="token operator">=</span> <span class="token class-name">MainPanel</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>enemy<span class="token punctuation">,</span> player<span class="token punctuation">)</span><span class="token punctuation">;</span>
            enemyPanel <span class="token operator">=</span> <span class="token class-name">EnemyPanel</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>enemy<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//Agregamos las pestañas</span>
            actionTabs <span class="token operator">=</span> <span class="token class-name">ActionsPanel</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//Agregamos el panel de estado</span>
            statusPanel <span class="token operator">=</span> <span class="token class-name">StatusPanel</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> player<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//Agregamos el panel de batalla</span>
            battlePanel <span class="token operator">=</span> <span class="token class-name">BattlePanel</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> enemy<span class="token punctuation">,</span> player<span class="token punctuation">,</span> slot<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//Agregamos el panel de inventario</span>
            inventoryPanel <span class="token operator">=</span> <span class="token class-name">InventoryPanel</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> player<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//Agregamos el panel de la tienda</span>
            shopPanel <span class="token operator">=</span> <span class="token class-name">ShopPanel</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> player<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token class-name">Player</span> <span class="token function">getPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> player<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPlayer</span><span class="token punctuation">(</span><span class="token class-name">Player</span> player<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">this</span><span class="token punctuation">.</span>player <span class="token operator">=</span> player<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token class-name">Enemy</span> <span class="token function">getEnemy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> enemy<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEnemy</span><span class="token punctuation">(</span><span class="token class-name">Enemy</span> enemy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token class-name">BattlePanel</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>enemy<span class="token punctuation">,</span> player<span class="token punctuation">,</span> slot<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setEnemy</span><span class="token punctuation">(</span>enemy<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>enemy <span class="token operator">=</span> enemy<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getSlot</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> slot<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,37),o=[t];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/guide/shop/","title":"Definamos la tienda","lang":"es-ES","frontmatter":{"icon":"shopping-cart","title":"Definamos la tienda","description":"Definamos a nuestro jugador y algunas de sus características.","head":[["meta",{"property":"og:url","content":"https://jesus-castro89.github.io/rpg_java/rpg_java/guide/shop/"}],["meta",{"property":"og:site_name","content":"RPG Java"}],["meta",{"property":"og:title","content":"Definamos la tienda"}],["meta",{"property":"og:description","content":"Definamos a nuestro jugador y algunas de sus características."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"es-ES"}],["meta",{"property":"og:updated_time","content":"2024-06-10T13:07:26.000Z"}],["meta",{"property":"article:author","content":"M. en E. Jesús Aurelio Castro Magaña"}],["meta",{"property":"article:modified_time","content":"2024-06-10T13:07:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Definamos la tienda\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-10T13:07:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"M. en E. Jesús Aurelio Castro Magaña\\",\\"url\\":\\"https://github.com/jesus-castro89\\"}]}"]]},"headers":[{"level":2,"title":"Definamos la tienda","slug":"definamos-la-tienda","link":"#definamos-la-tienda","children":[]},{"level":2,"title":"ShopItemDetail","slug":"shopitemdetail","link":"#shopitemdetail","children":[]},{"level":2,"title":"ShopPanel","slug":"shoppanel","link":"#shoppanel","children":[]},{"level":2,"title":"Actualizar ItemPanel","slug":"actualizar-itempanel","link":"#actualizar-itempanel","children":[]},{"level":2,"title":"Actualizando la clase GameWindow","slug":"actualizando-la-clase-gamewindow","link":"#actualizando-la-clase-gamewindow","children":[]}],"git":{"createdTime":1718024846000,"updatedTime":1718024846000,"contributors":[{"name":"Jesús Aurelio Castro Magaña","email":"jesus_castrom@my.unitec.edu.mx","commits":1}]},"readingTime":{"minutes":5.84,"words":1753},"filePathRelative":"guide/shop/README.md","localizedDate":"10 de junio de 2024"}');export{r as comp,d as data};
