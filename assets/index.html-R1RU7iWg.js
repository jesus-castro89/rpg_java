import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,b as e}from"./app-HJOKgcK2.js";const t={},p=e(`<h1 id="los-enemigos" tabindex="-1"><a class="header-anchor" href="#los-enemigos"><span>Los Enemigos</span></a></h1><p>Como ya hemos visto, nuestro personaje ya tiene algunos puntos y elementos básicos, pero ahora veamos el otro lado de la moneda del juego. Los enemigos, por tal razón, veamos la clase base, pero antes, definamos una pequeña interfaz funcional dentro de un nuevo paquete llamado <strong>util</strong>.</p><h2 id="randomized" tabindex="-1"><a class="header-anchor" href="#randomized"><span>Randomized</span></a></h2><p>Esta interfaz funcional nos permitirá generar números aleatorios, así como valores booleanos aleatorios. Para ello, crearemos una interfaz funcional llamada <strong>Randomized</strong> que contará con los siguientes métodos:</p><ul><li>randomizeNumber <ul><li>Genera un número aleatorio entre los valores especificados.</li></ul></li><li>randomizeBoolean <ul><li>Genera un valor booleano aleatorio.</li></ul></li><li>randomizeDouble(min, max) <ul><li>Genera un número decimal aleatorio entre los valores especificados.</li></ul></li><li>randomizeDouble(total) <ul><li>Genera un número decimal aleatorio entre 0 y el valor especificado.</li></ul></li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token keyword">package</span> <span class="token namespace">util<span class="token punctuation">.</span>interfaces</span><span class="token punctuation">;</span>
    
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>
    
    <span class="token doc-comment comment">/**
     * Randomized es una interfaz que proporciona métodos para generar números aleatorios, así como valores booleanos como
     * si de una moneda se tratara.
     *
     * <span class="token keyword">@author</span> jesus
     * <span class="token keyword">@version</span> 1.0
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Randomized</span> <span class="token punctuation">{</span>
    
        <span class="token doc-comment comment">/**
         * Genera un número aleatorio entre los valores especificados.
         *
         * <span class="token keyword">@param</span> <span class="token parameter">min</span> el valor mínimo del número generado
         * <span class="token keyword">@param</span> <span class="token parameter">max</span> el valor máximo del número generado
         *
         * <span class="token keyword">@return</span> un número aleatorio entre los valores especificados
         */</span>
        <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">randomizeNumber</span><span class="token punctuation">(</span><span class="token keyword">int</span> min<span class="token punctuation">,</span> <span class="token keyword">int</span> max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>max <span class="token operator">-</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> min<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token doc-comment comment">/**
         * Genera un valor booleano aleatorio.
         *
         * <span class="token keyword">@return</span> un valor booleano aleatorio
         */</span>
        <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">randomizeBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token doc-comment comment">/**
         * Genera un número decimal aleatorio entre los valores especificados.
         *
         * <span class="token keyword">@param</span> <span class="token parameter">min</span> el valor mínimo del número generado
         * <span class="token keyword">@param</span> <span class="token parameter">max</span> el valor máximo del número generado
         *
         * <span class="token keyword">@return</span> un número decimal aleatorio entre los valores especificados
         */</span>
        <span class="token keyword">static</span> <span class="token keyword">double</span> <span class="token function">randomizeDouble</span><span class="token punctuation">(</span><span class="token keyword">double</span> min<span class="token punctuation">,</span> <span class="token keyword">double</span> max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min<span class="token punctuation">)</span> <span class="token operator">+</span> min<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token doc-comment comment">/**
         * Genera un número decimal aleatorio entre 0 y el valor especificado.
         *
         * <span class="token keyword">@param</span> <span class="token parameter">total</span> el valor máximo del número generado
         *
         * <span class="token keyword">@return</span> un número decimal aleatorio entre 0 y el valor especificado
         */</span>
        <span class="token keyword">static</span> <span class="token keyword">double</span> <span class="token function">randomizeDouble</span><span class="token punctuation">(</span><span class="token keyword">double</span> total<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> total<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="regularenemy" tabindex="-1"><a class="header-anchor" href="#regularenemy"><span>RegularEnemy</span></a></h2><p>Dentro del paquete <code>util.annotations</code>, crearemos una nueva anotación llamada <code>RegularEnemy</code> que nos permitirá indicar que un enemigo es regular. Esta anotación no tendrá ningún atributo y se verá de la siguiente manera:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token keyword">package</span> <span class="token namespace">util<span class="token punctuation">.</span>annotations</span><span class="token punctuation">;</span>
    
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
    
    <span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">RegularEnemy</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="enemy" tabindex="-1"><a class="header-anchor" href="#enemy"><span>Enemy</span></a></h2><p>Ahora, crearemos la clase base de los enemigos llamada <code>Enemy</code>. Esta clase será abstracta y contará con los siguientes atributos y métodos:</p><ul><li>Atributos <ul><li><code>adjustmentFactor</code> - Un entero que representa el factor de ajuste.</li><li><code>name</code> - Un String que representa el nombre del enemigo.</li><li><code>stats</code> - Un HashMap que contiene las estadísticas del enemigo.</li><li><code>gold</code> - Un entero que representa la cantidad de oro que el enemigo otorga.</li><li><code>experience</code> - Un entero que representa la cantidad de experiencia que el enemigo otorga.</li><li><code>level</code> - Un entero que representa el nivel del enemigo.</li><li><code>maxLevel</code> - Un entero que representa el nivel máximo del enemigo.</li><li><code>image</code> - Una imagen que representa al enemigo.</li><li><code>imageManager</code> - Un ImageManager que nos permitirá gestionar las imágenes.</li><li><code>player</code> - Un Player que representa al jugador.</li><li><code>BASE_LEVEL</code> - Un entero que representa el nivel base.</li></ul></li><li>Métodos <ul><li><code>Enemy(Player player, String name, int maxLevel, int health, int gold, int experience)</code> - El constructor de la clase.</li><li><code>getExperience(int experience)</code> - Un método que nos permitirá obtener la experiencia del enemigo.</li><li><code>getGold(int gold)</code> - Un método que nos permitirá obtener el oro del enemigo.</li><li><code>getHealth(int health)</code> - Un método que nos permitirá obtener la salud del enemigo.</li><li><code>getDefense(Player player)</code> - Un método que nos permitirá obtener la defensa del enemigo.</li><li><code>getAdjustedSpeed()</code> - Un método que nos permitirá obtener la velocidad ajustada del enemigo.</li><li><code>getAdjustedAttack()</code> - Un método que nos permitirá obtener el ataque ajustado del enemigo.</li><li><code>getAdjustedDefense()</code> - Un método que nos permitirá obtener la defensa ajustada del enemigo.</li><li><code>getDamage(Player player)</code> - Un método que nos permitirá obtener el daño del enemigo.</li><li><code>getLevel(Player player, int maxLevel)</code> - Un método que nos permitirá obtener el nivel del enemigo.</li><li><code>getLuck()</code> - Un método que nos permitirá obtener la suerte del enemigo.</li><li><code>getImage()</code> - Un método que nos permitirá obtener la imagen del enemigo.</li><li><code>getImageManager()</code> - Un método que nos permitirá obtener el ImageManager.</li><li><code>getLevel()</code> - Un método que nos permitirá obtener el nivel del enemigo.</li><li><code>getMaxLevel()</code> - Un método que nos permitirá obtener el nivel máximo del enemigo.</li><li><code>getName()</code> - Un método que nos permitirá obtener el nombre del enemigo.</li><li><code>getGold()</code> - Un método que nos permitirá obtener el oro del enemigo.</li><li><code>getExperience()</code> - Un método que nos permitirá obtener la experiencia del enemigo.</li><li><code>calculateDamage(Player player)</code> - Un método que nos permitirá calcular el daño del enemigo.</li><li><code>calculateDamage(Player player, int damage)</code> - Un método que nos permitirá calcular el daño del enemigo.</li><li><code>takeDamage(Player player)</code> - Un método que nos permitirá recibir daño.</li><li><code>takeDamage(Player player, int damage)</code> - Un método que nos permitirá recibir daño.</li><li><code>attack()</code> - Un método que nos permitirá atacar.</li><li><code>getAttack()</code> - Un método que nos permitirá obtener el ataque del enemigo.</li><li><code>dropItem(Player player)</code> - Un método que nos permitirá soltar un objeto.</li><li><code>getStats()</code> - Un método que nos permitirá obtener las estadísticas del enemigo.</li></ul></li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token keyword">package</span> <span class="token namespace">enemies</span><span class="token punctuation">;</span>
    
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">characters<span class="token punctuation">.</span></span><span class="token class-name">BasicCharacter</span></span><span class="token punctuation">;</span>
    
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">gui<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span></span><span class="token class-name">EnemyDeadException</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">gui<span class="token punctuation">.</span>panels<span class="token punctuation">.</span></span><span class="token class-name">DialogPanel</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">player<span class="token punctuation">.</span></span><span class="token class-name">Player</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">player<span class="token punctuation">.</span></span><span class="token class-name">Stats</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">util<span class="token punctuation">.</span>interfaces<span class="token punctuation">.</span></span><span class="token class-name">Randomized</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">util<span class="token punctuation">.</span>managers<span class="token punctuation">.</span></span><span class="token class-name">ImageManager</span></span><span class="token punctuation">;</span>
    
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Enemy</span> <span class="token keyword">extends</span> <span class="token class-name">BasicCharacter</span> <span class="token punctuation">{</span>
    
        <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">int</span> adjustmentFactor <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
        <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
        <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Stats</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> stats <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">int</span> gold<span class="token punctuation">;</span>
        <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">int</span> experience<span class="token punctuation">;</span>
        <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">int</span> level<span class="token punctuation">;</span>
        <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">int</span> maxLevel<span class="token punctuation">;</span>
        <span class="token keyword">protected</span> <span class="token class-name">Image</span> image<span class="token punctuation">;</span>
        <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token class-name">ImageManager</span> imageManager <span class="token operator">=</span> <span class="token class-name">ImageManager</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token class-name">Player</span> player<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">BASE_LEVEL</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    
        <span class="token keyword">public</span> <span class="token class-name">Enemy</span><span class="token punctuation">(</span><span class="token class-name">Player</span> player<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> maxLevel<span class="token punctuation">,</span> <span class="token keyword">int</span> health<span class="token punctuation">,</span> <span class="token keyword">int</span> gold<span class="token punctuation">,</span> <span class="token keyword">int</span> experience<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> health<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>player <span class="token operator">=</span> player<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>maxLevel <span class="token operator">=</span> maxLevel<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>level <span class="token operator">=</span> <span class="token function">getLevel</span><span class="token punctuation">(</span>player<span class="token punctuation">,</span> maxLevel<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>maxHp <span class="token operator">=</span> <span class="token function">getHealth</span><span class="token punctuation">(</span>health<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>hp <span class="token operator">=</span> maxHp<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>gold <span class="token operator">=</span> <span class="token function">getGold</span><span class="token punctuation">(</span>gold<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>experience <span class="token operator">=</span> <span class="token function">getExperience</span><span class="token punctuation">(</span>experience<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getExperience</span><span class="token punctuation">(</span><span class="token keyword">int</span> experience<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> <span class="token class-name">Randomized</span><span class="token punctuation">.</span><span class="token function">randomizeNumber</span><span class="token punctuation">(</span>experience<span class="token punctuation">,</span> experience <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">*</span> level<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getGold</span><span class="token punctuation">(</span><span class="token keyword">int</span> gold<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> <span class="token class-name">Randomized</span><span class="token punctuation">.</span><span class="token function">randomizeNumber</span><span class="token punctuation">(</span>gold<span class="token punctuation">,</span> gold <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">*</span> level<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getHealth</span><span class="token punctuation">(</span><span class="token keyword">int</span> health<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">Randomized</span><span class="token punctuation">.</span><span class="token function">randomizeNumber</span><span class="token punctuation">(</span>health<span class="token punctuation">,</span> health <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> level<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">protected</span> <span class="token keyword">int</span> <span class="token function">getDefense</span><span class="token punctuation">(</span><span class="token class-name">Player</span> player<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">int</span> defense <span class="token operator">=</span> <span class="token function">getAdjustedDefense</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>stats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Stats</span><span class="token punctuation">.</span><span class="token constant">LUCK</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> player<span class="token punctuation">.</span><span class="token function">getDexterity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//TODO: Implementar críticos</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> defense<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAdjustedSpeed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> stats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Stats</span><span class="token punctuation">.</span><span class="token constant">SPEED</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>player<span class="token punctuation">.</span><span class="token function">getLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token constant">BASE_LEVEL</span><span class="token punctuation">)</span> <span class="token operator">*</span> adjustmentFactor<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAdjustedAttack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">int</span> adjustedAttack <span class="token operator">=</span> stats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Stats</span><span class="token punctuation">.</span><span class="token constant">ATTACK</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>player<span class="token punctuation">.</span><span class="token function">getLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token constant">BASE_LEVEL</span><span class="token punctuation">)</span> <span class="token operator">*</span> adjustmentFactor<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>adjustedAttack <span class="token operator">&lt;=</span> player<span class="token punctuation">.</span><span class="token function">getDefense</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> adjustedAttack <span class="token operator">=</span> player<span class="token punctuation">.</span><span class="token function">getDefense</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> adjustmentFactor<span class="token punctuation">;</span>
            <span class="token keyword">return</span> adjustedAttack<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAdjustedDefense</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">int</span> adjustedDefense <span class="token operator">=</span> stats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Stats</span><span class="token punctuation">.</span><span class="token constant">DEFENSE</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>player<span class="token punctuation">.</span><span class="token function">getLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token constant">BASE_LEVEL</span><span class="token punctuation">)</span> <span class="token operator">*</span> adjustmentFactor<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>adjustedDefense <span class="token operator">&gt;=</span> player<span class="token punctuation">.</span><span class="token function">getDamage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> adjustedDefense <span class="token operator">=</span> player<span class="token punctuation">.</span><span class="token function">getDamage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> adjustmentFactor<span class="token punctuation">;</span>
            <span class="token keyword">return</span> adjustedDefense<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">protected</span> <span class="token keyword">int</span> <span class="token function">getDamage</span><span class="token punctuation">(</span><span class="token class-name">Player</span> player<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">int</span> damage <span class="token operator">=</span> <span class="token function">getAdjustedAttack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>stats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Stats</span><span class="token punctuation">.</span><span class="token constant">DEXTERITY</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> player<span class="token punctuation">.</span><span class="token function">getLuck</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
                <span class="token comment">//TODO: Implementar críticos</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> damage<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getLevel</span><span class="token punctuation">(</span><span class="token class-name">Player</span> player<span class="token punctuation">,</span> <span class="token keyword">int</span> maxLevel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> player<span class="token punctuation">.</span><span class="token function">getLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getLuck</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> stats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Stats</span><span class="token punctuation">.</span><span class="token constant">LUCK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token class-name">Image</span> <span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> image<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token class-name">ImageManager</span> <span class="token function">getImageManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> imageManager<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> level<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getMaxLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> maxLevel<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> name<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getGold</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> gold<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getExperience</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> experience<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">calculateDamage</span><span class="token punctuation">(</span><span class="token class-name">Player</span> player<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>player<span class="token punctuation">.</span><span class="token function">getDamage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">getDefense</span><span class="token punctuation">(</span>player<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">calculateDamage</span><span class="token punctuation">(</span><span class="token class-name">Player</span> player<span class="token punctuation">,</span> <span class="token keyword">int</span> damage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>damage <span class="token operator">-</span> <span class="token function">getDefense</span><span class="token punctuation">(</span>player<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">takeDamage</span><span class="token punctuation">(</span><span class="token class-name">Player</span> player<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">int</span> damage <span class="token operator">=</span> <span class="token function">calculateDamage</span><span class="token punctuation">(</span>player<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> message <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;¡%s ataca con %d punto(s) de daño!\\n&quot;</span><span class="token punctuation">,</span> player<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> player<span class="token punctuation">.</span><span class="token function">getDamage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            message <span class="token operator">+=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;¡%s sufre %d punto(s) de daño!\\n&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> damage<span class="token punctuation">)</span><span class="token punctuation">;</span>
            hp <span class="token operator">-=</span> damage<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                message <span class="token operator">+=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;¡%s ha sido derrotado!\\n&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> message<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">takeDamage</span><span class="token punctuation">(</span><span class="token class-name">Player</span> player<span class="token punctuation">,</span> <span class="token keyword">int</span> damage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">int</span> finalDamage <span class="token operator">=</span> <span class="token function">calculateDamage</span><span class="token punctuation">(</span>player<span class="token punctuation">,</span> damage<span class="token punctuation">)</span><span class="token punctuation">;</span>
            hp <span class="token operator">-=</span> finalDamage<span class="token punctuation">;</span>
            <span class="token class-name">String</span> message <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;¡%s sufre %d punto(s) de daño!\\n&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> finalDamage<span class="token punctuation">)</span><span class="token punctuation">;</span>
            message <span class="token operator">+=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;¡%s ataca con %d punto(s) de daño!\\n&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> damage<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                message <span class="token operator">+=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;¡%s ha sido derrotado!\\n&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> message<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">EnemyDeadException</span> <span class="token punctuation">{</span>
    
            <span class="token class-name">DialogPanel</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addText</span><span class="token punctuation">(</span><span class="token function">getAttack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token class-name">String</span> <span class="token function">getAttack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">EnemyDeadException</span><span class="token punctuation">;</span>
    
        <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">dropItem</span><span class="token punctuation">(</span><span class="token class-name">Player</span> player<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
        <span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Stats</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">getStats</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">return</span> stats<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),o=[p];function c(l,i){return s(),a("div",null,o)}const d=n(t,[["render",c],["__file","index.html.vue"]]),k=JSON.parse('{"path":"/guide/enemies/","title":"Los Enemigos","lang":"es-ES","frontmatter":{"icon":"user","title":"Los Enemigos","description":"Entendamos a los enemigos y veamos poco a poco interactuemos con el.","head":[["meta",{"property":"og:url","content":"https://jesus-castro89.github.io/rpg_java/rpg_java/guide/enemies/"}],["meta",{"property":"og:site_name","content":"RPG Java"}],["meta",{"property":"og:title","content":"Los Enemigos"}],["meta",{"property":"og:description","content":"Entendamos a los enemigos y veamos poco a poco interactuemos con el."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"es-ES"}],["meta",{"property":"og:updated_time","content":"2024-05-05T23:46:13.000Z"}],["meta",{"property":"article:author","content":"M. en E. Jesús Aurelio Castro Magaña"}],["meta",{"property":"article:modified_time","content":"2024-05-05T23:46:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Los Enemigos\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-05T23:46:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"M. en E. Jesús Aurelio Castro Magaña\\",\\"url\\":\\"https://github.com/jesus-castro89\\"}]}"]]},"headers":[{"level":2,"title":"Randomized","slug":"randomized","link":"#randomized","children":[]},{"level":2,"title":"RegularEnemy","slug":"regularenemy","link":"#regularenemy","children":[]},{"level":2,"title":"Enemy","slug":"enemy","link":"#enemy","children":[]}],"git":{"createdTime":1708927531000,"updatedTime":1714952773000,"contributors":[{"name":"Jesús Aurelio Castro Magaña","email":"jesus_castrom@my.unitec.edu.mx","commits":4}]},"readingTime":{"minutes":4.16,"words":1248},"filePathRelative":"guide/enemies/README.md","localizedDate":"26 de febrero de 2024"}');export{d as comp,k as data};
